{
  "_args": [
    [
      {
        "raw": "vue-masked-input@^0.5.2",
        "scope": null,
        "escapedName": "vue-masked-input",
        "name": "vue-masked-input",
        "rawSpec": "^0.5.2",
        "spec": ">=0.5.2 <0.6.0",
        "type": "range"
      },
      "/Users/sean/Sites/naughtonio"
    ]
  ],
  "_from": "vue-masked-input@>=0.5.2 <0.6.0",
  "_id": "vue-masked-input@0.5.2",
  "_inCache": true,
  "_location": "/vue-masked-input",
  "_nodeVersion": "6.9.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/vue-masked-input-0.5.2.tgz_1497001211169_0.04090463696047664"
  },
  "_npmUser": {
    "name": "niksmr",
    "email": "nikulinsmr@gmail.com"
  },
  "_npmVersion": "4.1.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "vue-masked-input@^0.5.2",
    "scope": null,
    "escapedName": "vue-masked-input",
    "name": "vue-masked-input",
    "rawSpec": "^0.5.2",
    "spec": ">=0.5.2 <0.6.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/vue-masked-input/-/vue-masked-input-0.5.2.tgz",
  "_shasum": "b47f64ea38e41378182918b1928066569b7504f4",
  "_shrinkwrap": null,
  "_spec": "vue-masked-input@^0.5.2",
  "_where": "/Users/sean/Sites/naughtonio",
  "author": {
    "name": "niksmr"
  },
  "bugs": {
    "url": "https://github.com/niksmr/vue-masked-input/issues"
  },
  "dependencies": {
    "inputmask-core": "^2.2.0",
    "vue": "^2.2.6"
  },
  "description": "Masked input component for Vue.js 2.X",
  "devDependencies": {
    "babel-cli": "^6.24.1",
    "babel-core": "^6.0.0",
    "babel-loader": "^7.0.0",
    "babel-polyfill": "^6.22.0",
    "babel-preset-es2015": "^6.0.0",
    "cross-env": "^4.0.0",
    "css-loader": "^0.28.0",
    "eslint": "^3.19.0",
    "eslint-config-airbnb-base": "^11.1.3",
    "eslint-plugin-import": "^2.2.0",
    "file-loader": "^0.11.1",
    "vue-loader": "^12.0.0",
    "vue-template-compiler": "^2.1.0",
    "webpack": "^2.2.0",
    "webpack-dev-server": "^2.2.0"
  },
  "directories": {},
  "dist": {
    "shasum": "b47f64ea38e41378182918b1928066569b7504f4",
    "tarball": "https://registry.npmjs.org/vue-masked-input/-/vue-masked-input-0.5.2.tgz"
  },
  "gitHead": "3d9d8b50900ce735e3919d00b4ab21705cd122cb",
  "homepage": "https://github.com/niksmr/vue-masked-input",
  "keywords": [
    "vue",
    "mask",
    "masked",
    "input"
  ],
  "license": "MIT",
  "main": "dist/maskedInput.js",
  "maintainers": [
    {
      "name": "niksmr",
      "email": "nikulinsmr@gmail.com"
    }
  ],
  "name": "vue-masked-input",
  "optionalDependencies": {},
  "readme": "# Vue Masked Input\nDead simple masked input component for Vue.js 2.X. Based on [inputmask-core](https://github.com/insin/inputmask-core).\n\n### [Live Demo](https://niksmr.github.io/vue-masked-input/)\n\n## Install\n### npm\n```\nnpm install vue-masked-input --save\n```\n\n## Usage\nUse it with `v-model` just like a native html input with the `mask` attribute:\n```vue\n<masked-input v-model=\"date\" mask=\"11/11/1111\" placeholder=\"dd/mm/yyyy\" />\n```\n\nThe following format characters define editable parts of the mask (see [inputmask-core](https://github.com/insin/inputmask-core)):\n* `1` - number\n* `a` - letter\n* `A` - letter, forced to upper case when entered\n* `*` - alphanumeric\n* `#` - alphanumeric, forced to upper case when entered\n* `+` - any character\n\n### Static characters\nIf you need to include one of these characters as a static part of the mask, you can escape them with a preceding backslash:\n```vue\n<masked-input v-model=\"phone\" mask=\"\\+\\1 (111) 111-1111\" placeholder=\"Phone number\" type=\"tel\" />\n```\n\n### Raw input\nYou can also get a raw user input text if you want. Instead of using v-model you might need second argument of the input event:\n```vue\n<masked-input mask=\"\\+\\1 (111) 1111-11\" placeholder=\"Phone\" @input=\"rawVal = arguments[1]\" />\n```\n\n### Placeholder character\nPlaceholder character is customizable by `placeholder-char` attribute:\n```vue\n<masked-input v-model=\"phone\" mask=\"\\+\\1 (111) 111-1111\" placeholder-char=\"-\" placeholder=\"Phone number\" type=\"tel\" />\n```\n\n### Custom mask object\nYou can use your own mask options object, it will be passed to the [inputmask-core](https://github.com/insin/inputmask-core#inputmask-options) constructor:\n```vue\n<masked-input\n  v-model=\"custom\"\n  placeholder=\"Custom\"\n  :mask=\"{\n    pattern: 'VVVV',\n    formatCharacters: {\n      'V': {\n        validate: char => /[a-jA-J]/.test(char),\n        transform: char => char.toUpperCase(),\n      },\n    },\n  }\"\n/>\n```\n\n## Known issues/TODO\n* Cut in mobile Chrome\n* Cyrillic chars are not supported in mobile Chrome\n* Backspace problems in mobile Chrome\n\nFound more? It's open for feedback and pull requests\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/niksmr/vue-masked-input.git"
  },
  "scripts": {
    "babel": "npm run babel-component & npm run babel-poly",
    "babel-component": "babel src/ff-polyfill.js --out-file dist/ff-polyfill.js",
    "babel-poly": "babel src/MaskedInput.js --out-file dist/maskedInput.js",
    "build": "cross-env NODE_ENV=production webpack --progress --hide-modules & npm run babel",
    "dev": "cross-env NODE_ENV=development webpack-dev-server --open --inline --hot",
    "lint": "eslint src/MaskedInput.js"
  },
  "version": "0.5.2"
}
